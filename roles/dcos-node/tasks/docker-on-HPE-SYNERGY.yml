###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: Add docker yum repo
  blockinfile:
    dest: /etc/yum.repos.d/docker.repo
    create: yes
    block: |
      [dockerrepo]
      name=Docker Repository
      baseurl=https://yum.dockerproject.org/repo/main/centos/7/
      enabled=1
      gpgcheck=0
      gpgkey=https://yum.dockerproject.org/gpg
      timeout=60

- name: Install Docker on CentOS
  yum:
    name: docker-engine
    state: present 
  when: ansible_distribution == 'CentOS'

- name: Install Docker on Redhat
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - docker-engine 
    - docker-engine-selinux-1.11.2 
  when: ansible_distribution == 'RedHat'
  
- name: Stop Docker
  service:
    name: docker
    state: stopped

- name: Configure Docker to use OverlayFS (part 1)
  set_fact:
    dockerd_cmd: "docker daemon"
    dockerd_arg: "--storage-driver=overlay"

- name: Configure Docker to use OverlayFS (part 2)
  replace: >
    dest=/usr/lib/systemd/system/docker.service
    regexp="^(ExecStart=(.*){{ dockerd_cmd }}) (?!{{ dockerd_arg }})"
    replace="\1 {{ dockerd_arg }} "

- name: Create docker group
  group: >
    name=docker
    state=present

- name: Add users to the docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  with_items:
  - docker

- name: Start Docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Set SELinux to permissive mode
  selinux: policy=targeted state=permissive

- name: Allow sudo without a tty
  lineinfile: >
    dest=/etc/sudoers
    regexp="^Defaults(\s+)(.*)requiretty(.*)"
    line="#Defaults\1\2requiretty\3"
    backrefs=yes
