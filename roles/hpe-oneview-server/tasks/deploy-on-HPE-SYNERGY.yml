###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
###
# This playbook is only compatible with HPE Synergy Enclosures
###
    - name: Gather facts about the Server Profile Template to retrieve connection information
      oneview_server_profile_template_facts:
        config: "{{ config }}"
        name: "{{ server_template_name }}"
      delegate_to: localhost

    - name: Find the connection by management network name
      set_fact: connection={{ server_profile_templates.0.connections | selectattr('name', 'match', management_network_name) | first }}

    - name : "Create server profile with deployment plan {{ deployment_plan_name }}"
      delegate_to: localhost
      oneview_server_profile:
        config: "{{ config }}"
        data:
            name: "{{ inventory_hostname }}"
            server_template: "{{ server_template_name }}"
            osDeploymentSettings:
              osDeploymentPlanName: "{{ deployment_plan_name }}"
              osCustomAttributes:
                -  name: MGMT.connectionid
                   value: '{{ connection.id }}'
                -  name: MGMT.dhcp
                   value: true
                -  name: MGMT.ipv4disable
                   value: false
#                -  name: MGMT.dns1
#                   value: "192.168.1.1"
#                -  name: MGMT.domain
#                   value: "etss.lab"
#                -  name: MGMT.dns2
#                   value: '16.31.84.24'
#                -  name: MGMT.gateway
#                   value: '192.168.1.11'
                -  name: interface_name
                   value: ens3f4
#                -  name: MGMT.netmask
#                   value: '255.255.252.0'
                -  name: fqdn
                   value: "{{ inventory_hostname }}.{{ domain_name }}"
                -  name: dhcphost
                   value: "{{ inventory_hostname }}"
                -  name: MGMT.networkuri
                   value: '{{ connection.networkUri }}'
                -  name: MGMT.constraint
                   value: 'dhcp'
                -  name: SSH_CERT1
                   value: "{{ lookup('file', '~/.ssh/root_ansible1.pub') }}"
                -  name: SSH_CERT2
                   value: "{{ lookup('file', '~/.ssh/root_ansible2.pub') }}"
#                -  name: ProxyExclusionList
#                   value: bootstrap
#                -  name: ProxyHost
#                   value: proxy.houston.hpecorp.net
#                -  name: ProxyPort
#                   value: 8088



    - name: Power on the server hardware
      oneview_server_hardware:
        config: "{{ config }}"
        state: power_state_set
        data:
          hostname : "{{ server_hardware.name }}"
          name: "{{  server_hardware.name }}"
          powerStateData:
            powerState: "On"
            powerControl: "MomentaryPress"
      when: server_hardware.powerState == "Off"
      delegate_to: localhost

    - name: Wait for SSH connection to server
      wait_for: host="{{ inventory_hostname }}.{{ domain_name }}" port=22 state=started timeout=1500
      delegate_to: localhost
